// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type W2BMSG struct {
	Type                 uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *W2BMSG) Reset()         { *m = W2BMSG{} }
func (m *W2BMSG) String() string { return proto.CompactTextString(m) }
func (*W2BMSG) ProtoMessage()    {}
func (*W2BMSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *W2BMSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_W2BMSG.Unmarshal(m, b)
}
func (m *W2BMSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_W2BMSG.Marshal(b, m, deterministic)
}
func (m *W2BMSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_W2BMSG.Merge(m, src)
}
func (m *W2BMSG) XXX_Size() int {
	return xxx_messageInfo_W2BMSG.Size(m)
}
func (m *W2BMSG) XXX_DiscardUnknown() {
	xxx_messageInfo_W2BMSG.DiscardUnknown(m)
}

var xxx_messageInfo_W2BMSG proto.InternalMessageInfo

func (m *W2BMSG) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *W2BMSG) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type B2WMSG struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *B2WMSG) Reset()         { *m = B2WMSG{} }
func (m *B2WMSG) String() string { return proto.CompactTextString(m) }
func (*B2WMSG) ProtoMessage()    {}
func (*B2WMSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *B2WMSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_B2WMSG.Unmarshal(m, b)
}
func (m *B2WMSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_B2WMSG.Marshal(b, m, deterministic)
}
func (m *B2WMSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_B2WMSG.Merge(m, src)
}
func (m *B2WMSG) XXX_Size() int {
	return xxx_messageInfo_B2WMSG.Size(m)
}
func (m *B2WMSG) XXX_DiscardUnknown() {
	xxx_messageInfo_B2WMSG.DiscardUnknown(m)
}

var xxx_messageInfo_B2WMSG proto.InternalMessageInfo

func (m *B2WMSG) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*W2BMSG)(nil), "rpc.W2BMSG")
	proto.RegisterType((*B2WMSG)(nil), "rpc.B2WMSG")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2a, 0x48, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x56, 0xd2, 0xe3, 0x62, 0x0b, 0x37,
	0x72, 0xf2, 0x0d, 0x76, 0x17, 0x12, 0xe2, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x0d, 0x02, 0xb3, 0x85, 0x04, 0xb8, 0x98, 0x73, 0x8b, 0xd3, 0x25, 0x98, 0x14, 0x18,
	0x35, 0x38, 0x83, 0x40, 0x4c, 0x25, 0x29, 0x2e, 0x36, 0x27, 0xa3, 0x70, 0x90, 0x7a, 0xa8, 0x1c,
	0x23, 0x5c, 0xce, 0xc8, 0x88, 0x0b, 0x64, 0xa4, 0x90, 0x36, 0x17, 0x67, 0x50, 0x41, 0x72, 0x70,
	0x49, 0x51, 0x6a, 0x62, 0xae, 0x10, 0xb7, 0x1e, 0xc8, 0x42, 0x88, 0x15, 0x52, 0x10, 0x0e, 0x44,
	0xbf, 0x12, 0x83, 0x06, 0xa3, 0x01, 0x63, 0x12, 0x1b, 0xd8, 0x2d, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x1b, 0x7d, 0x2e, 0x03, 0x98, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RpcClient is the client API for Rpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcClient interface {
	RpcStream(ctx context.Context, opts ...grpc.CallOption) (Rpc_RpcStreamClient, error)
}

type rpcClient struct {
	cc grpc.ClientConnInterface
}

func NewRpcClient(cc grpc.ClientConnInterface) RpcClient {
	return &rpcClient{cc}
}

func (c *rpcClient) RpcStream(ctx context.Context, opts ...grpc.CallOption) (Rpc_RpcStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Rpc_serviceDesc.Streams[0], "/rpc.rpc/RpcStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcRpcStreamClient{stream}
	return x, nil
}

type Rpc_RpcStreamClient interface {
	Send(*W2BMSG) error
	Recv() (*B2WMSG, error)
	grpc.ClientStream
}

type rpcRpcStreamClient struct {
	grpc.ClientStream
}

func (x *rpcRpcStreamClient) Send(m *W2BMSG) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rpcRpcStreamClient) Recv() (*B2WMSG, error) {
	m := new(B2WMSG)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RpcServer is the server API for Rpc service.
type RpcServer interface {
	RpcStream(Rpc_RpcStreamServer) error
}

// UnimplementedRpcServer can be embedded to have forward compatible implementations.
type UnimplementedRpcServer struct {
}

func (*UnimplementedRpcServer) RpcStream(srv Rpc_RpcStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method RpcStream not implemented")
}

func RegisterRpcServer(s *grpc.Server, srv RpcServer) {
	s.RegisterService(&_Rpc_serviceDesc, srv)
}

func _Rpc_RpcStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RpcServer).RpcStream(&rpcRpcStreamServer{stream})
}

type Rpc_RpcStreamServer interface {
	Send(*B2WMSG) error
	Recv() (*W2BMSG, error)
	grpc.ServerStream
}

type rpcRpcStreamServer struct {
	grpc.ServerStream
}

func (x *rpcRpcStreamServer) Send(m *B2WMSG) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rpcRpcStreamServer) Recv() (*W2BMSG, error) {
	m := new(W2BMSG)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Rpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.rpc",
	HandlerType: (*RpcServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RpcStream",
			Handler:       _Rpc_RpcStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "rpc.proto",
}
